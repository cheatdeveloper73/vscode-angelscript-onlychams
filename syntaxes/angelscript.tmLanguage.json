{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "AngelScript",
    "scopeName": "source.angelscript",
    "patterns": [
        { "include": "#comments" },
        { "include": "#strings" },
        { "include": "#keywords" },
        { "include": "#storage_modifiers" },
        { "include": "#constants" },
        { "include": "#support_types" },
        { "include": "#api_types" },
        { "include": "#api_functions" },
        { "include": "#function_names" },
        { "include": "#operators" },
        { "include": "#punctuation" },
        { "include": "#identifier" }
    ],
    "repository": {
        "comments": {
            "patterns": [
                {
                    "name": "comment.line.double-slash.angelscript",
                    "match": "//.*"
                },
                {
                     "name": "comment.line.hash.angelscript",
                     "match": "#.*"
                },
                {
                    "name": "comment.block.angelscript",
                    "begin": "/\\*",
                    "end": "\\*/",
                    "patterns": [ { "include": "#comments" } ]
                }
            ]
        },
        "strings": {
            "patterns": [
                {
                    "name": "string.quoted.verbatim.double.angelscript",
                    "begin": "@\"",
                    "end": "\"",
                    "patterns": [ {"match": "\"\""} ]
                },
                {
                    "name": "string.quoted.verbatim.single.angelscript",
                    "begin": "@'",
                    "end": "'",
                    "patterns": [ {"match": "''"} ]
                },
                {
                    "name": "string.quoted.double.angelscript",
                    "begin": "\"",
                    "end": "\"",
                    "patterns": [ { "include": "#string_escapes" } ]
                },
                {
                    "name": "string.quoted.single.angelscript",
                    "begin": "'",
                    "end": "'",
                    "patterns": [ { "include": "#string_escapes" } ]
                },
                {
                    "name": "string.quoted.heredoc.angelscript",
                    "begin": "``",
                    "end": "``"
                }
            ]
        },
         "string_escapes": {
             "patterns": [
                {
                    "name": "constant.character.escape.angelscript",
                    "match": "\\\\(n|r|t|\\\\|'|\"|\\?|0|a|b|f|v|[xX][0-9a-fA-F]{1,2}|[uU][0-9a-fA-F]{4})"
                },
                {
                     "name": "invalid.illegal.escape.angelscript",
                     "match": "\\\\."
                }
            ]
        },
        "constants": {
             "patterns": [
                {
                    "name": "constant.language.angelscript",
                    "match": "\\b(true|false|null)\\b"
                },
                {
                    "name": "constant.numeric.angelscript",
                    "match": "\\b(0[xX][0-9a-fA-F]+|\\d*\\.?\\d+([eE][+-]?\\d+)?f?)\\b"
                 }
            ]
        },
        "keywords": {
            "patterns": [
                {
                    "name": "keyword.control.angelscript",
                    "match": "\\b(if|else|for|while|do|break|continue|return|switch|case|default|try|catch|throw|foreach)\\b"
                },
                {
                    "name": "keyword.other.angelscript",
                    "match": "\\b(namespace|class|enum|interface|funcdef|typedef|import|from|external|mixin|shared)\\b"
                },
                {
                    "name": "keyword.operator.angelscript",
                    "match": "\\b(is|isnot|in|out|inout)\\b"
                },
                {
                     "name": "keyword.type.angelscript",
                     "match": "\\b(void|bool|int|int8|int16|int32|int64|uint|uint8|uint16|uint32|uint64|float|double)\\b"
                }
            ]
        },
         "storage_modifiers": {
            "patterns": [
                {
                    "name": "storage.modifier.angelscript",
                    "match": "\\b(const|private|protected|public|final|override|set|get|property|cast|implicit|explicit|auto)\\b"
                },
                {
                    "name": "storage.type.angelscript",
                     "match": "\\b(this|super)\\b"
                }
            ]
        },
        "support_types": {
            "patterns": [
                {
                    "name": "support.type.angelscript",
                    "match": "\\b(string|array)\\b"
                }
            ]
        },
        "operators": {
            "patterns": [
                {
                    "name": "keyword.operator.comparison.angelscript",
                    "match": "==|!=|<=|>=|<|>"
                },
                {
                    "name": "keyword.operator.assignment.compound.angelscript",
                    "match": "\\+=|-=|\\*=|/=|%=|&=|\\|=|\\^=|<<=|>>="
                },
                {
                    "name": "keyword.operator.assignment.angelscript",
                    "match": "="
                },
                {
                     "name": "keyword.operator.increment-decrement.angelscript",
                     "match": "\\+\\+|--"
                },
                {
                    "name": "keyword.operator.arithmetic.angelscript",
                    "match": "\\+|\\-|\\*|\\/|%"
                },
                {
                    "name": "keyword.operator.logical.angelscript",
                    "match": "&&|\\|\\||!"
                },
                 {
                     "name": "keyword.operator.bitwise.angelscript",
                     "match": "<<|>>|&|\\||\\^|~"
                 },
                 {
                      "name": "keyword.operator.scope.angelscript",
                      "match": "::"
                 },
                 {
                      "name": "keyword.operator.other.angelscript",
                      "match": "\\?|@"
                 }
            ]
        },
        "punctuation": {
             "patterns": [
                { "name": "punctuation.terminator.angelscript", "match": ";" },
                { "name": "punctuation.separator.angelscript", "match": "," },
                { "name": "punctuation.accessor.angelscript", "match": "\\." },
                { "name": "meta.brace.square.angelscript", "match": "\\[|\\]" },
                { "name": "meta.brace.round.angelscript", "match": "\\(|\\)" },
                { "name": "meta.brace.curly.angelscript", "match": "\\{|\\}" }
             ]
        },

        "api_types": {
            "patterns": [
                {
                    "name": "entity.name.type.api.angelscript",
                    "match": "\\b(observed_player_state_context_t|cached_part_collider_t|ballistics_collider_t|fire_mode_component_t|EBodyPartColliderType|ballistic_collider_t|body_part_collider_t|cached_game_object_t|firearm_controller_t|internal_transform_t|health_controller_t|UNITY_COLLIDER_TYPE|cached_container_t|weapon_animation_t|body_controller_t|breath_affector_t|cached_claymore_t|cached_tripwire_t|collider_bounds_t|unity_transform_t|weapon_template_t|managed_string_t|mono_behaviour_t|movement_state_t|profile_skills_t|INTERACTION_TYPE|ammo_template_t|cached_corpse_t|dictionaryValue|int_container_t|item_template_t|player_spring_t|recoil_spring_t|body_stamina_t|bounding_box_t|carried_data_t|dictionaryIter|hand_stamina_t|player_bones_t|profile_info_t|slider_float_t|unity_camera_t|ETripwireState|body_health_t|cached_exit_t|cached_item_t|cached_mine_t|colorpicker_t|const_weakref|game_object_t|multi_combo_t|player_flag_t|bool_skill_t|game_world_t|quaternion_t|slider_int_t|ELEMENT_TYPE|EPlayerState|MaterialType|cartridge_t|EReloadMode|checkbox_t|collider_t|dictionary|filesystem|i_player_t|magazine_t|movement_t|physical_t|sdk_data_t|EStateType|HumanBones|element_t|globals_t|keybind_t|profile_t|vmatrix_t|EBodyPart|EFireMode|flag_type|button_t|datetime|player_t|weapon_t|window_t|child_t|color_t|combo_t|skill_t|weakref|bind_t|font_t|item_t|slot_t|socket|vec2_t|vec3_t|FONTS|file|grid|any)(@|&)?\\b"
                }
            ]
        },
        "api_functions": {
            "patterns": [
                {
                    "name": "entity.name.function.api.angelscript",
                    "match": "\\b(get_aiming_interrupted_by_overlap|set_aiming_interrupted_by_overlap|get_interactive_raycast_mask|set_interactive_raycast_mask|get_magazine_check_accuracy|get_fall_damage_multiplier|set_fall_damage_multiplier|get_current_chamber_index|get_trajectory_deviation|set_trajectory_deviation|set_interaction_callback|get_time_since_last_jump|set_time_since_last_jump|get_magazine_check_speed|get_animator_state_hash|set_animator_state_hash|get_disable_root_motion|set_disable_root_motion|get_hands_to_body_angle|set_hands_to_body_angle|get_throwing_elite_buff|get_contained_cartridge|cached_part_collider_t|get_current_down_force|set_current_down_force|get_physical_condition|set_physical_condition|get_contained_magazine|get_firearm_controller|get_shotgun_dispersion|set_shotgun_dispersion|get_registration_date|get_breath_intensity|set_breath_intensity|get_breath_frequency|set_breath_frequency|cached_game_object_t|get_single_fire_rate|set_single_fire_rate|get_all_cfg_elements|get_ricochet_chance|set_ricochet_chance|get_body_controller|get_current_stamina|set_current_stamina|get_shake_intensity|set_shake_intensity|get_stick_to_ground|set_stick_to_ground|get_camera_position|get_camera_rotation|get_magazine_unload|get_weight_increase|get_sprint_increase|get_breath_affector|get_weapon_template|get_hip_inaccuracy|set_hip_inaccuracy|get_previous_state|get_override_state|get_hands_position|get_hands_rotation|get_throw_increase|get_contained_item|get_occlusion_cull|set_occlusion_cull|get_is_bolt_action|set_is_bolt_action|get_initial_speed|set_initial_speed|get_material_type|changeCurrentPath|getCreateDateTime|getModifyDateTime|get_weapon_length|set_weapon_length|get_linecast_mask|set_linecast_mask|get_health_status|get_current_state|get_recoil_spring|get_camera_offset|set_camera_offset|get_magazine_load|get_smoothed_tilt|set_smoothed_tilt|get_possible_tilt|set_possible_tilt|get_ammo_template|get_is_bolt_catch|set_is_bolt_catch|get_element_count|get_element_child|set_current_child|add_circle_filled|add_rect_outlined|add_text_shadowed|get_collider_ptr|get_auto_fire_on|set_auto_fire_on|get_raid_started|get_can_interact|set_can_interact|get_body_stamina|set_body_stamina|get_hand_stamina|set_hand_stamina|get_lucky_search|get_return_speed|set_return_speed|get_aspect_ratio|set_aspect_ratio|get_is_sprinting|get_speed_factor|get_default_size|get_local_player|add_slider_float|get_display_size|get_hip_penalty|set_hip_penalty|set_next_column|dictionaryValue|get_body_health|get_view_angles|set_view_angles|get_entry_point|world_to_screen|get_reload_mode|set_reload_mode|get_module_base|get_render_data|add_colorpicker|add_multi_combo|add_rect_filled|carried_data_t|clear_elements|getCurrentPath|get_plant_time|set_plant_time|get_experience|get_loot_speed|findFirstNotOf|get_b_firerate|set_b_firerate|get_ergonomics|set_ergonomics|get_visibility|set_visibility|get_cache_data|get_game_world|add_slider_int|get_main_child|remove_element|get_cursor_pos|get_delta_time|get_intensity|set_intensity|get_transform|const_weakref|set_fire_mode|get_fire_mode|get_short_gun|set_short_gun|get_is_aiming|set_is_aiming|player_flag_t|get_colliders|get_slot_name|findLastNotOf|get_near_clip|set_near_clip|get_aim_index|get_dpi_scale|set_dpi_scale|set_force_pos|get_all_binds|get_claymores|get_tripwires|area_contains|get_click_pos|get_key_state|get_text_size|set_position|get_elements|opHndlAssign|get_position|get_rotation|get_velocity|get_nickname|quaternion_t|set_rotation|get_mag_slot|get_chambers|set_velocity|insert_child|get_children|get_extracts|add_checkbox|find_element|get_caliber|opForValue0|opForValue1|removeRange|get_enabled|set_visible|get_visible|set_tooltip|pop_element|get_weekDay|opAddAssign|opSubAssign|isEndOfFile|writeString|writeDouble|game_object|instance_id|get_examine|get_damping|set_damping|get_current|set_current|findFirstOf|opNotEquals|opMulAssign|opDivAssign|formatFloat|get_corpses|get_globals|get_players|add_keybind|create_font|opForBegin|insertLast|removeLast|get_aiming|opImplCast|get_bounds|get_minute|get_second|readString|readDouble|writeFloat|deleteFile|get_map_id|opImplConv|class_name|get_is_bot|set_is_bot|get_skills|findLastOf|get_matrix|get_spring|find_child|formatUInt|fpFromIEEE|parseFloat|get_camera|move_mouse|rand_float|add_button|get_window|add_circle|opForNext|findByRef|get_value|set_value|calculate|get_label|set_label|set_flags|get_month|deleteAll|readFloat|writeUInt|removeDir|transform|get_bones|get_flags|get_level|magnitude|normalize|conjugate|findFirst|regexFind|get_scene|length_2d|get_slots|formatInt|parseUInt|get_binds|get_items|get_mines|to_screen|add_combo|opAssign|retrieve|opForEnd|insertAt|removeAt|sortDesc|opEquals|get_type|get_name|get_year|get_hour|datetime|readLine|readUInt|writeInt|getFiles|copyFile|get_item|position|is_alive|get_size|set_name|set_type|get_side|get_jump|get_info|isActive|findLast|rotation|distance|set_size|fpToIEEE|fraction|parseInt|add_line|add_rect|add_text|get_time|opIndex|reserve|sortAsc|reverse|isEmpty|set_pos|get_pos|color_t|get_day|setDate|setTime|opAdd_r|opSub_r|getSize|getKeys|readInt|movePos|getDirs|makeDir|connect|receive|get_fov|set_fov|forward|weakref|closeTo|add_log|length|resize|opCast|bind_t|exists|delete|opConv|getPos|setPos|isLink|height|get_id|listen|accept|substr|insert|string|vec2_t|vec3_t|format|store|beh10|beh11|beh12|beh13|opSub|opAdd|opCmp|close|isDir|width|opMul|erase|right|opDiv|cross|atan2|clamp|floor|log10|write|beh5|beh6|beh9|find|sort|beh8|list|lerp|open|move|name|send|acos|asin|atan|ceil|cosh|scan|sinh|sqrt|tanh|read|get|set|dot|abs|cos|log|max|min|pow|sin|tan|up)\\b(?=\\s*\\()"
                }
            ]
        },
         "function_names": {
             "patterns": [
                {
                    "name": "entity.name.function.angelscript",
                     "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b(?=\\s*\\()"
                }
            ]
        },
        "identifier": {
            "patterns": [
                {
                    "name": "variable.other.angelscript",
                    "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
                }
            ]
        }
    }
}